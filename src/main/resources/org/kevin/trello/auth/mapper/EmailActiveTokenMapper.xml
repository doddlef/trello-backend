<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.kevin.trello.auth.mapper.EmailActiveTokenMapper">
    <resultMap id="EmailActiveTokenResultMap" type="org.kevin.trello.auth.model.EmailActiveToken">
        <id property="id" column="id"/>
        <result property="token" column="token"/>
        <result property="uid" column="uid"/>
        <result property="createdAt" column="created_at"/>
        <result property="expiresAt" column="expires_at"/>
    </resultMap>

    <sql id="EmailActiveTokenColumns">
        id, token, uid, created_at, expires_at
    </sql>

    <select id="findByToken" resultMap="EmailActiveTokenResultMap">
        SELECT
        <include refid="EmailActiveTokenColumns"/>
        FROM email_active_tokens
        WHERE token = #{token}
        LIMIT 1
    </select>

    <insert id="insertToken" parameterType="org.kevin.trello.auth.mapper.query.EmailActiveTokenInsertQuery">
        INSERT INTO email_active_tokens (token, uid, created_at, expires_at)
        VALUES (#{token}, #{uid}, #{createdAt}, #{expiresAt})
    </insert>

    <delete id="deleteByToken" parameterType="string">
        DELETE FROM email_active_tokens WHERE token = #{token}
    </delete>

    <delete id="deleteAllExpiredTokens">
        DELETE FROM email_active_tokens WHERE expires_at &lt; NOW()
    </delete>

    <select id="findByEmail" resultMap="EmailActiveTokenResultMap">
        SELECT
        <include refid="EmailActiveTokenColumns"/>
        FROM email_active_tokens
        WHERE uid = (SELECT uid FROM accounts WHERE email = #{email} LIMIT 1)
        LIMIT 1
    </select>
</mapper>